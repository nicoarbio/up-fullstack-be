/api/v1/order/validate:
  post:
    tags: [ Orden ]
    summary: Validar disponibilidad y precios de una orden
    description: Verifica stock, calcula precios, aplica descuentos y responde los valores finales o indica falta de stock.
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              requestedBookings:
                type: array
                items:
                  type: object
                  properties:
                    product:
                      $ref: '#/components/schemas/Product'
                    slotStart:
                      type: string
                      format: date-time
                    passengersAmount:
                      type: integer
              extraIds:
                type: array
                items:
                  type: string
          example:
            requestedBookings:
              - product: jet_sky
                slotStart: "2025-04-29T11:00:00.000-03:00"
                passengersAmount: 2
              - product: diving_gear
                slotStart: "2025-04-29T11:30:00.000-03:00"
                passengersAmount: 1
            extraIds:
              - storm_insurance
    responses:
      200:
        description: Validación exitosa
        content:
          application/json:
            schema:
              type: object
              properties:
                requestedBookings:
                  type: array
                  items:
                    type: object
                    properties:
                      slotStart:
                        type: string
                        format: date-time
                      slotEnd:
                        type: string
                        format: date-time
                      product:
                        type: object
                        properties:
                          type:
                            type: string
                          stockId:
                            type: string
                          price:
                            type: number
                      accessories:
                        type: array
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                            stockId:
                              type: string
                            price:
                              type: number
                extraIds:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      type:
                        type: string
                        enum: [fixed, percentage]
                      value:
                        type: number
                      price:
                        type: number
                discounts:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      type:
                        type: string
                        enum: [fixed, percentage]
                      value:
                        type: number
                      price:
                        type: number
                totalPrice:
                  type: number
                  example: 50000
                totalExtras:
                  type: number
                  example: 1500
                totalDiscount:
                  type: number
                  example: 5000
                finalTotal:
                  type: number
                  example: 46500
      409:
        description: Error por falta de stock
        content:
          application/json:
            schema:
              type: object
              properties:
                outOfStock:
                  type: object
                  properties:
                    productId:
                      type: array
                      items:
                        type: string
                    accessoryId:
                      type: array
                      items:
                        type: string

/api/v1/order/create:
  post:
    tags: [ Orden ]
    summary: Crear una nueva orden y sus bookings asociados
    description: Valida stock nuevamente, crea la orden, asigna los bookings y retorna la orden creada.
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              requestedBookings:
                type: array
                items:
                  type: object
                  properties:
                    product:
                      type: string
                    slotStart:
                      type: string
                      format: date-time
                    passengersAmount:
                      type: integer
              extraIds:
                type: array
                items:
                  type: string
          example:
            requestedBookings:
              - product: jet_sky
                slotStart: "2025-04-29T11:00:00.000-03:00"
                passengers:
                  - fullName: "Juan Perez 1"
                    birthdate: "1995-04-29T00:00:00.000-03:00"
                  - fullName: "Juan Perez 2"
                    birthdate: "1995-04-29T00:00:00.000-03:00"
              - product: diving_gear
                slotStart: "2025-04-29T11:30:00.000-03:00"
                passengers:
                  - fullName: "Juan Perez 3"
                    birthdate: "1995-04-29T00:00:00.000-03:00"
            extraIds:
              - storm_insurance
    responses:
      201:
        description: Orden creada exitosamente
        content:
          application/json:
            schema:
              type: object
              properties:
                orderId:
                  type: string
                totalPrice:
                  type: number
                finalPrice:
                  type: number
                bookings:
                  type: array
                  items:
                    type: string
            example:
              orderId: "66153ccfeafcb3934b2e4f33"
              totalPrice: 47000
              finalPrice: 44150
              bookings:
                - "66153ccfeafcb3934b2e4f45"
                - "66153ccfeafcb3934b2e4f46"
      409:
        description: Stock insuficiente para crear la orden
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                outOfStock:
                  type: object
                  properties:
                    productId:
                      type: array
                      items:
                        type: string
                    accessoryId:
                      type: array
                      items:
                        type: string
            example:
              message: "No hay stock suficiente para completar la orden."
              outOfStock:
                productId: ["jet_sky"]
                accessoryId: ["life_jacket"]
      400:
        description: Error de validación en el payload
      401:
        description: No autenticado
      500:
        description: Error interno del servidor

/api/v1/order/{id}:
  get:
    tags: [ Orden ]
    summary: Obtener el detalle de una orden por ID
    description: Retorna la orden y sus bookings asociados si pertenece al usuario autenticado.
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        description: ID de la orden a buscar
    responses:
      200:
        description: Orden encontrada
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      400:
        description: ID de orden inválido
      401:
        description: No autenticado
      403:
        description: El usuario no tiene permiso para ver esta orden
      404:
        description: Orden no encontrada
      500:
        description: Error interno del servidor
